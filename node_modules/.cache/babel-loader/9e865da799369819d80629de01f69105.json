{"ast":null,"code":"import _classCallCheck from \"H:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"H:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"H:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"H:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"H:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"H:\\\\react\\\\aurareact\\\\src\\\\api\\\\apidata.js\";\nimport React, { Component } from 'react';\nimport Backendurl from '../api/backendurl.json';\n\nvar Apidata =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Apidata, _Component);\n\n  function Apidata(props) {\n    var _this;\n\n    _classCallCheck(this, Apidata);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Apidata).call(this, props));\n    _this.state = {\n      items: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Apidata, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.setState({\n        data: data.articles,\n        loading: false\n      }, function () {\n        return console.log(data.articles);\n      });\n      console.log('app mounted');\n      fetch('http://localhost/aura/api/v1/products').then(function (data) {\n        return data.json();\n      }).then(function (data) {\n        return _this2.setState({\n          data: data.articles,\n          loading: false\n        });\n      });\n      console.log('Results -', JSON.stringify(this.data));\n    }\n    /*     componentDidMount() {\r\n            fetch('http://localhost/aura/api/v1/products')\r\n                .then(res => res.json())\r\n                .then(json => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        items: json.data,\r\n                    })\r\n                });\r\n        } */\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, items.map(function (item) {\n        return React.createElement(\"li\", {\n          key: \"{item.id}\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, item.name, React.createElement(\"img\", {\n          src: \"\".concat(Backendurl.BACKENDURL).concat(item.banner),\n          className: \"img-fluid\",\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return Apidata;\n}(Component);\n\nexport { Apidata as default };","map":{"version":3,"sources":["H:\\react\\aurareact\\src\\api\\apidata.js"],"names":["React","Component","Backendurl","Apidata","props","state","items","isLoaded","setState","data","articles","loading","console","log","fetch","then","json","JSON","stringify","map","item","name","BACKENDURL","banner"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,wBAAvB;;IAIqBC,O;;;;;AACjB,mBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,iFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,EADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAFe;AAMlB;;;;wCAEmB;AAAA;;AAChB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,IAAI,EAAEA,IAAI,CAACC,QAAb;AAAuBC,QAAAA,OAAO,EAAE;AAAhC,OAAd,EAAsD;AAAA,eAAMC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACC,QAAjB,CAAN;AAAA,OAAtD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAC,MAAAA,KAAK,CAAC,uCAAD,CAAL,CACKC,IADL,CACU,UAAAN,IAAI;AAAA,eAAIA,IAAI,CAACO,IAAL,EAAJ;AAAA,OADd,EAEKD,IAFL,CAEU,UAAAN,IAAI;AAAA,eAAI,MAAI,CAACD,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEA,IAAI,CAACC,QAAb;AAAuBC,UAAAA,OAAO,EAAE;AAAhC,SAAd,CAAJ;AAAA,OAFd;AAGIC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBI,IAAI,CAACC,SAAL,CAAe,KAAKT,IAApB,CAAzB;AACP;AAKL;;;;;;;;;;;;;6BAYa;AAAA,wBACqB,KAAKJ,KAD1B;AAAA,UACCE,QADD,eACCA,QADD;AAAA,UACWD,KADX,eACWA,KADX;;AAEL,UAAI,CAACC,QAAL,EAAe;AACX,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACH;;AACD,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKD,KAAK,CAACa,GAAN,CAAU,UAAAC,IAAI;AAAA,eACX;AAAI,UAAA,GAAG,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,IAAI,CAACC,IADV,EAEI;AAAK,UAAA,GAAG,YAAKnB,UAAU,CAACoB,UAAhB,SAA6BF,IAAI,CAACG,MAAlC,CAAR;AAAoD,UAAA,SAAS,EAAC,WAA9D;AAA0E,UAAA,GAAG,EAAC,EAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADW;AAAA,OAAd,CADL,CAFJ,CADJ;AAaH;;;;EAnDgCtB,S;;SAAhBE,O","sourcesContent":["import React, { Component } from 'react';\r\nimport Backendurl from '../api/backendurl.json'\r\n\r\n\r\n\r\nexport default class Apidata extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            isLoaded: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ data: data.articles, loading: false}, () => console.log(data.articles))\r\n        console.log('app mounted');\r\n        fetch('http://localhost/aura/api/v1/products')\r\n            .then(data => data.json())\r\n            .then(data => this.setState({ data: data.articles, loading: false}))\r\n            console.log('Results -', JSON.stringify(this.data));\r\n    }\r\n\r\n\r\n\r\n\r\n/*     componentDidMount() {\r\n        fetch('http://localhost/aura/api/v1/products')\r\n            .then(res => res.json())\r\n            .then(json => {\r\n                this.setState({\r\n                    isLoaded: true,\r\n                    items: json.data,\r\n                })\r\n            });\r\n    } */\r\n\r\n\r\n    render() {\r\n        var { isLoaded, items } = this.state;\r\n        if (!isLoaded) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        return (\r\n            <div>\r\n\r\n                <ul>\r\n                    {items.map(item => (\r\n                        <li key=\"{item.id}\">\r\n                            {item.name}\r\n                            <img src={`${Backendurl.BACKENDURL}${item.banner}`} className=\"img-fluid\" alt=\"\"/>                 \r\n                        </li> \r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}