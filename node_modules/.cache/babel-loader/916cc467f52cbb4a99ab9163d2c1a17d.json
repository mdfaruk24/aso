{"ast":null,"code":"import _classCallCheck from \"E:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\react\\\\aurareact\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\react\\\\aurareact\\\\src\\\\components\\\\common\\\\theme-settings.jsx\";\nimport React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { withTranslate } from 'react-redux-multilingual';\nimport { SlideUpDown } from \"../../services/script\";\nimport { ToastContainer } from 'react-toastify';\n\nvar ThemeSettings =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ThemeSettings, _Component);\n\n  function ThemeSettings(props) {\n    var _this;\n\n    _classCallCheck(this, ThemeSettings);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ThemeSettings).call(this, props));\n\n    _this.handleScroll = function () {\n      if (document.documentElement.scrollTop > 600) {\n        document.querySelector(\".tap-top\").style = \"display: block\";\n      } else {\n        document.querySelector(\".tap-top\").style = \"display: none\";\n      }\n    };\n\n    _this.state = {\n      divName: 'RTL',\n      themeLayout: false\n    };\n    return _this;\n  }\n  /*=====================\r\n   Tap on Top\r\n   ==========================*/\n\n\n  _createClass(ThemeSettings, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      window.addEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('scroll', this.handleScroll);\n    }\n  }, {\n    key: \"clickToTop\",\n    value: function clickToTop() {\n      window.scroll({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      SlideUpDown('setting-title');\n    } // Color Picker\n\n  }, {\n    key: \"changeColor\",\n    value: function changeColor(event, color) {\n      var elems = document.querySelectorAll(\".color-box li\");\n      [].forEach.call(elems, function (elemt) {\n        elemt.classList.remove('active');\n      });\n      event.target.classList.add('active');\n      console.log(color);\n      document.getElementById(\"color\").setAttribute(\"href\", \"\".concat(process.env.PUBLIC_URL, \"/assets/css/\") + color + \".css\");\n    }\n  }, {\n    key: \"changeThemeLayout\",\n    value: function changeThemeLayout() {\n      this.setState({\n        themeLayout: !this.state.themeLayout\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.themeLayout) {\n        document.body.classList.add('dark');\n      } else {\n        document.body.classList.remove('dark');\n      }\n\n      var tap_to_top = {\n        display: 'none'\n      };\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"sidebar-btn dark-light-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"dark-light\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"theme-layout-version\",\n        onClick: function onClick() {\n          return _this2.changeThemeLayout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.themeLayout ? React.createElement(\"img\", {\n        src: \"\".concat(process.env.PUBLIC_URL, \"/assets/images/icon/sun.svg\"),\n        className: \"img-fluid\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }) : React.createElement(\"img\", {\n        src: \"\".concat(process.env.PUBLIC_URL, \"/assets/images/icon/moon.svg\"),\n        className: \"img-fluid\",\n        alt: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      })))), React.createElement(\"div\", {\n        className: \"tap-top\",\n        onClick: this.clickToTop,\n        style: tap_to_top,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-angle-double-up\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }))), React.createElement(ToastContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ThemeSettings;\n}(Component);\n\nexport default withTranslate(ThemeSettings);","map":{"version":3,"sources":["E:\\react\\aurareact\\src\\components\\common\\theme-settings.jsx"],"names":["React","Component","Link","withTranslate","SlideUpDown","ToastContainer","ThemeSettings","props","handleScroll","document","documentElement","scrollTop","querySelector","style","state","divName","themeLayout","window","addEventListener","removeEventListener","scroll","top","left","behavior","event","color","elems","querySelectorAll","forEach","call","elemt","classList","remove","target","add","console","log","getElementById","setAttribute","process","env","PUBLIC_URL","setState","body","tap_to_top","display","changeThemeLayout","clickToTop"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAAQC,WAAR,QAA0B,uBAA1B;AACA,SAASC,cAAT,QAA+B,gBAA/B;;IAEMC,a;;;;;AAEF,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,uFAAMA,KAAN;;AADc,UAmBlBC,YAnBkB,GAmBH,YAAM;AACjB,UAAIC,QAAQ,CAACC,eAAT,CAAyBC,SAAzB,GAAqC,GAAzC,EAA8C;AAC1CF,QAAAA,QAAQ,CAACG,aAAT,CAAuB,UAAvB,EAAmCC,KAAnC,GAA2C,gBAA3C;AACH,OAFD,MAEO;AACHJ,QAAAA,QAAQ,CAACG,aAAT,CAAuB,UAAvB,EAAmCC,KAAnC,GAA2C,eAA3C;AACH;AACJ,KAzBiB;;AAGd,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAC,KADC;AAETC,MAAAA,WAAW,EAAE;AAFJ,KAAb;AAHc;AAOjB;AAGD;;;;;;;yCAGqB;AACjBC,MAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,KAAKV,YAAvC;AACH;;;2CACsB;AACnBS,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqC,KAAKX,YAA1C;AACH;;;iCAQW;AACRS,MAAAA,MAAM,CAACG,MAAP,CAAc;AAACC,QAAAA,GAAG,EAAE,CAAN;AAASC,QAAAA,IAAI,EAAE,CAAf;AAAkBC,QAAAA,QAAQ,EAAE;AAA5B,OAAd;AACH;;;wCAEmB;AAChBnB,MAAAA,WAAW,CAAC,eAAD,CAAX;AACH,K,CAED;;;;gCACYoB,K,EAAOC,K,EAAM;AACrB,UAAIC,KAAK,GAAGjB,QAAQ,CAACkB,gBAAT,CAA0B,eAA1B,CAAZ;AACA,SAAGC,OAAH,CAAWC,IAAX,CAAgBH,KAAhB,EAAuB,UAASI,KAAT,EAAgB;AACnCA,QAAAA,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB;AACH,OAFD;AAIAR,MAAAA,KAAK,CAACS,MAAN,CAAaF,SAAb,CAAuBG,GAAvB,CAA2B,QAA3B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACAhB,MAAAA,QAAQ,CAAC4B,cAAT,CAAwB,OAAxB,EAAiCC,YAAjC,CAA8C,MAA9C,EAAsD,UAAGC,OAAO,CAACC,GAAR,CAAYC,UAAf,oBAAwChB,KAAxC,SAAtD;AACH;;;wCAGmB;AAChB,WAAKiB,QAAL,CAAc;AACV1B,QAAAA,WAAW,EAAC,CAAC,KAAKF,KAAL,CAAWE;AADd,OAAd;AAGH;;;6BAEQ;AAAA;;AACL,UAAG,KAAKF,KAAL,CAAWE,WAAd,EAA0B;AACtBP,QAAAA,QAAQ,CAACkC,IAAT,CAAcZ,SAAd,CAAwBG,GAAxB,CAA4B,MAA5B;AACH,OAFD,MAEK;AACDzB,QAAAA,QAAQ,CAACkC,IAAT,CAAcZ,SAAd,CAAwBC,MAAxB,CAA+B,MAA/B;AACH;;AACD,UAAIY,UAAU,GAAG;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAjB;AAEA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,SAAS,EAAC,sBADd;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,iBAAL,EAAN;AAAA,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,KAAKhC,KAAL,CAAWE,WAAX,GAAwB;AAAK,QAAA,GAAG,YAAKuB,OAAO,CAACC,GAAR,CAAYC,UAAjB,gCAAR;AAAkE,QAAA,SAAS,EAAC,WAA5E;AAAwF,QAAA,GAAG,EAAC,EAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,GAA4H;AAAK,QAAA,GAAG,YAAKF,OAAO,CAACC,GAAR,CAAYC,UAAjB,iCAAR;AAAmE,QAAA,SAAS,EAAC,WAA7E;AAAyF,QAAA,GAAG,EAAC,EAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAH9H,CADJ,CADJ,CADJ,EAUI;AAAK,QAAA,SAAS,EAAC,SAAf;AAAyB,QAAA,OAAO,EAAE,KAAKM,UAAvC;AAAmD,QAAA,KAAK,EAAEH,UAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAG,QAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,CAVJ,EAgBI,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CADJ;AAoBH;;;;EAnFuB3C,S;;AAsF5B,eAAeE,aAAa,CAACG,aAAD,CAA5B","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport { withTranslate } from 'react-redux-multilingual'\r\n\r\nimport {SlideUpDown} from \"../../services/script\"\r\nimport { ToastContainer } from 'react-toastify';\r\n\r\nclass ThemeSettings extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            divName:'RTL',\r\n            themeLayout: false\r\n        }\r\n    }\r\n\r\n\r\n    /*=====================\r\n     Tap on Top\r\n     ==========================*/\r\n     componentWillMount(){\r\n        window.addEventListener('scroll', this.handleScroll);\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener('scroll', this.handleScroll);\r\n    }\r\n    handleScroll = () => {\r\n        if (document.documentElement.scrollTop > 600) {\r\n            document.querySelector(\".tap-top\").style = \"display: block\";\r\n        } else {\r\n            document.querySelector(\".tap-top\").style = \"display: none\";\r\n        }\r\n    }\r\n    clickToTop(){\r\n        window.scroll({top: 0, left: 0, behavior: 'smooth' })\r\n    }\r\n\r\n    componentDidMount() {\r\n        SlideUpDown('setting-title');\r\n    }\r\n\r\n    // Color Picker\r\n    changeColor(event, color){\r\n        var elems = document.querySelectorAll(\".color-box li\");\r\n        [].forEach.call(elems, function(elemt) {\r\n            elemt.classList.remove('active');\r\n        })\r\n\r\n        event.target.classList.add('active');\r\n        console.log(color)\r\n        document.getElementById(\"color\").setAttribute(\"href\", `${process.env.PUBLIC_URL}/assets/css/`+color+`.css` );\r\n    }\r\n\r\n\r\n    changeThemeLayout() {\r\n        this.setState({\r\n            themeLayout:!this.state.themeLayout\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if(this.state.themeLayout){\r\n            document.body.classList.add('dark');\r\n        }else{\r\n            document.body.classList.remove('dark');\r\n        }\r\n        let tap_to_top = {display: 'none'}\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"sidebar-btn dark-light-btn\">\r\n                    <div className=\"dark-light\">\r\n                        <div\r\n                            className=\"theme-layout-version\"\r\n                            onClick={() => this.changeThemeLayout()}\r\n                        >{this.state.themeLayout? <img src={`${process.env.PUBLIC_URL}/assets/images/icon/sun.svg`} className=\"img-fluid\" alt=\"\" /> : <img src={`${process.env.PUBLIC_URL}/assets/images/icon/moon.svg`} className=\"img-fluid\" alt=\"\" /> }</div>\r\n                        \r\n                    </div>\r\n                </div>\r\n                <div className=\"tap-top\" onClick={this.clickToTop} style={tap_to_top}>\r\n                    <div>\r\n                        <i className=\"fa fa-angle-double-up\"></i>\r\n                    </div>\r\n                </div>\r\n\r\n                <ToastContainer/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withTranslate(ThemeSettings);\r\n"]},"metadata":{},"sourceType":"module"}